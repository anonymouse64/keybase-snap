name: keybase
base: core22
version: 6.2.8
summary: Keybase is secure messaging and file-sharing.
description: End-to-end encryption for things that matter.

grade: devel
confinement: strict

# TODO: support other architectures
architectures:
  - build-on: amd64

package-repositories:
  # for yarn
  - type: apt
    url: https://dl.yarnpkg.com/debian/
    suites: ["stable"]
    components:
      - "main"
    key-id: 72ECF46A56B4AD39C907BBB71646B01B86E50310

plugs:
  shared-memory:
    private: true

apps:
  keybase:
    # avoid plugging browser-support and launch without sandbox since keybase
    # doesn't generally handle untrusted content so there shouldn't be much of a
    # threat here
    command: opt/keybase/Keybase --no-sandbox

    extensions: [gnome]
    desktop: usr/share/applications/keybase.desktop
    command-chain:
      - setup-env.sh
    plugs:
      - avahi-observe
      - network
      - network-bind
      - unity7
      - cups

  keybase-cli:
    command: usr/bin/keybase
    command-chain:
      - setup-env.sh
    plugs:
      - network
      - network-bind
      - home

  service:
    command: usr/bin/keybase --debug service
    command-chain:
      - setup-env.sh
    install-mode: enable
    daemon-scope: user
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind

  kbfs:
    # TODO: kbfs ends up storing the path to mount including the snap revision so
    # even if we get unprivileged fuse mounts working we need to make sure that
    # its config uses the current symlink rather than the actual path otherwise
    # mounting will fail once the snap is upgraded to a new revision
    command: usr/bin/kbfsfuse -debug
    command-chain:
      - setup-env.sh
    install-mode: enable
    daemon-scope: user
    after:
      - service
    restart-condition: always
    daemon: simple
    plugs:
      - fuse-support
      - network
      - network-bind
      - network-observe # for resolv.conf maybe ?
      - mount-observe

  # left as a reference, but not used in the snap since /keybase doesn't work
  # well inside a strict snap
  # keybase-redirector:
  #   passthrough:
  #     install-mode: disable
  #     daemon-scope: user
  #     # from the systemd service, unclear if it's needed
  #     start-command: bin/keybase --use-root-config-file config get --direct --assert-false --assert-ok-on-nil disable-root-redirector
  #   after:
  #     - keybase-svc
  #   command: usr/bin/keybase-redirector /keybase
  #   daemon: simple

parts:
  static:
    source: static
    plugin: dump
    stage-packages:
      - libnss3

  # currently the fuse-support interface doesn't allow unprivileged fuse mounts
  # so kbfs will always fail to mount even if we stage a setuid fusermount
  # binary. So there is not much point in staging this until that is supported
  # by snapd.
  fusermount-without-suid:
    plugin: nil
    stage-packages:
      - fuse
    override-build: |
      # remove suid on fusermount for now until fuse-support allows unprivileged mounts
      chmod 0755 $SNAPCRAFT_PART_INSTALL/bin/fusermount

  keybase:
    plugin: dump
    source: https://prerelease.keybase.io/keybase_amd64.deb
    override-prime: |
      set -eu
      craftctl default
      # Fix-up application icon lookup
      sed -i.bak -e 's|^Icon=.*|Icon=${SNAP}/usr/share/icons/hicolor/256x256/apps/keybase.png|' usr/share/applications/keybase.desktop
      # fix suid on chrome-sandbox since we don't need it and run with --no-sandbox
      chmod 0755 opt/keybase/chrome-sandbox

  # fails to build on LP behind proxy "RequestError: getaddrinfo ENOTFOUND github.com"
  # keybase:
  #   source: https://github.com/keybase/client.git
  #   source-tag: v$SNAPCRAFT_PROJECT_VERSION
  #   source-depth: 1
  #   plugin: nil
  #   build-snaps:
  #     - go
  #     - node/20/stable
  #   build-packages:
  #     - yarn # from package-repositories
  #     - unzip
  #     - rsync
  #   build-environment:
  #     - KEYBASE_SKIP_32_BIT: "1"
  #   override-build: |
  #     cd packaging/linux
  #     ./build_binaries.sh prerelease $SNAPCRAFT_PART_BUILD
  #     cp -r $SNAPCRAFT_PART_BUILD/binaries/$CRAFT_ARCH_BUILD_FOR/* $SNAPCRAFT_PART_INSTALL

  #     # fix suid on chrome-sandbox - note this may not be needed?
  #     chmod 4555 $SNAPCRAFT_PART_INSTALL/opt/keybase/chrome-sandbox

